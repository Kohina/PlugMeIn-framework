= How to set up the projects =

It's important that you check out every folder in the trunk as an own project. That means that you should have these projects if you've done it right:

- Falcons AlarmPlugin

- Falcons Client

- Falcons DummyPlugin

- Falcons Library

- Falcons Pluginibrary

- Falcons SendMessagePlugin

- Falcons Server

- Falcons TellstickPlugin

- Falcons TicTacToePlugin

= How to start the server =

To start the server you run the Falcons Server project.

= How to start the client =

To start the client you simply run the Falcons Client project.

= How to connect the client to the server =

To connect the client to the server you open the settings window in the client application and enters IP and Port (this should be localhost).

= How to load a plugin =

To be able to run a plugin in the client you have to export the plugin-project as a .jar to the /plugins folder in the client, same thing for the server. Both the client and the server has to have a plugin loaded for it to be able to run.

The project can't contain: .classpath and .project when you export it, because this confuses our classloader. 

= How to implement a plugin =

We recommend that a plugin is implemented using a MVC structure.

The plugin needs to provide a JPanel to the system via a getMainPanel()-method so it can be run, how this JPanel is made is completely up to the programmer.

You should have a pluginPlugin.java file that extends AbstractPlugin, it also has to have an Plugin annotation to provide versionID and PluginID (this can be the name of the plugin)

ALL plugin-classes have to implement pluggable to be able to use the framework. Other than that it's completely up to the programmer to implement the plugin as he wishes.

= How to reconnect the client to the server =

When you disconnect from the server a concurrency issue occurs and we unfortunately still don't know why, after hours of debugging. This means that you have to restart the server before reconnecting.